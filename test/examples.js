
function Example(title, desc, tmpl, data, out) {
	this.title = title;
	this.desc = desc;
	this.tmpl = tmpl;
	this.data = data;
	this.out = out;
}
var examples = [
	new Example('文本',
		'不支持转义，如需输出 {{，用 {{"{{"}}',
		'hello world',
		null,
		'hello world'),
	new Example('表达式：Identifier',
		'',
		'{{root}}',
		'hello world',
		'hello world'),
	new Example('表达式：null',
		'',
		'a{{root}}b',
		null,
		'ab'),
	new Example('表达式：StringLiteral',
		'',
		'{{"hello world"}}',
		null,
		'hello world'),
	new Example('表达式：NumericLiteral',
		'',
		'{{123}}',
		null,
		'123'),
	new Example('表达式：BooleanLiteral',
		'',
		'{{true}}',
		null,
		'true'),

	new Example('表达式：( Expression )',
		'',
		'{{("hello world")}}',
		null,
		'hello world'),
	new Example('默认转义',
		'htmlEncode： & < > "，如不转义，用 {{{ }}}',
		'{{"<hello>"}} {{{"<world>"}}}',
		null,
		'&lt;hello&gt; <world>'),

	new Example('成员表达式',
		'',
		'{{root[1]}}',
		[0, 1, 2],
		'1'),
	new Example('成员表达式',
		'',
		'{{root.a}}',
		{ a: 'hehe' },
		'hehe'),

	new Example('一元表达式：逻辑反',
		'0、""、null 为假，其余为真',
		'{{!true}}',
		null,
		'false'),
	new Example('一元表达式：负号',
		'',
		'{{-1-root}}',
		2,
		'-3'),

	new Example('二元表达式：乘',
		'',
		'{{root * 2}}',
		3,
		'6'),
	new Example('二元表达式：除',
		'',
		'{{root / 2}}',
		4,
		'2'),
	new Example('二元表达式：模',
		'',
		'{{root.h24 % 12}}',
		{ h24: 15 },
		'3'),

	new Example('二元表达式：加',
		'',
		'{{1 + 2}}',
		null,
		'3'),
	new Example('二元表达式：减',
		'',
		'{{1 - 2}}',
		null,
		'-1'),

	new Example('二元表达式：小于',
		'',
		'{{1 < 2}}',
		null,
		'true'),
	new Example('二元表达式：大于',
		'',
		'{{1 > 2}}',
		null,
		'false'),

	new Example('二元表达式：小于等于',
		'',
		'{{1 <= 2}}',
		null,
		'true'),
	new Example('二元表达式：大于等于',
		'',
		'{{1 >= 2}}',
		null,
		'false'),

	new Example('二元表达式：等于',
		'',
		'{{1 === 2}}',
		null,
		'false'),
	new Example('二元表达式：等于',
		'',
		'{{1 == 2}}',
		null,
		'false'),
	new Example('二元表达式：不等于',
		'',
		'{{1 !== 2}}',
		null,
		'true'),
	new Example('二元表达式：不等于',
		'',
		'{{1 != 2}}',
		null,
		'true'),

	new Example('二元表达式：等于',
		'',
		'{{1 === "1"}}',
		null,
		'false'),
	new Example('二元表达式：等于',
		'',
		'{{1 == "1"}}',
		null,
		'true'),
	new Example('二元表达式：不等于',
		'',
		'{{1 !== "1"}}',
		null,
		'true'),
	new Example('二元表达式：不等于',
		'',
		'{{1 != "1"}}',
		null,
		'false'),

	new Example('二元表达式：逻辑与',
		'',
		'{{1 && 2}}',
		null,
		'2'),
	new Example('二元表达式：逻辑或',
		'',
		'{{1 || 2}}',
		null,
		'1'),

	new Example('赋值语句',
		'',
		'{{set a=root.a}}\n{{a*a}}',
		{ a: 2 },
		'\n4'),
	new Example('条件语句',
		'',
		'{{#if true}}true{{/if}}',
		null,
		'true'),
	new Example('条件语句 2',
		'',
		'{{#if false}}true{{else}}false{{/if}}',
		null,
		'false'),

	new Example('循环语句',
		'只输出值',
		'{{#each root "value"}}\n\t{{value}}\n{{/each}}',
		[1, 2, 3],
		'\n\t1\n\n\t2\n\n\t3\n'),
	new Example('循环数组',
		'输出名和值',
		'{{#each root "value" "key"}}\n\t{{key}}=>{{value}}\n{{/each}}',
		[1, 2, 3],
		'\n\t0=>1\n\n\t1=>2\n\n\t2=>3\n'),
	new Example('循环对象',
		'输出名和值',
		'{{#forin root "value" "key"}}\n\t{{key}}=>{{value}}\n{{/each}}',
		{ a: 1, b: 2, c: 3 },
		'\n\ta=>1\n\n\tb=>2\n\n\tc=>3\n'),

	new Example('循环语句，不带引号',
		'只输出值',
		'{{#each root value}}\n\t{{value}}\n{{/each}}',
		[1, 2, 3],
		'\n\t1\n\n\t2\n\n\t3\n'),
	new Example('循环数组，不带引号',
		'输出名和值',
		'{{#each root value key}}\n\t{{key}}=>{{value}}\n{{/each}}',
		[1, 2, 3],
		'\n\t0=>1\n\n\t1=>2\n\n\t2=>3\n'),
	new Example('循环对象，不带引号',
		'输出名和值',
		'{{#forin root value key}}\n\t{{key}}=>{{value}}\n{{/each}}',
		{ a: 1, b: 2, c: 3 },
		'\n\ta=>1\n\n\tb=>2\n\n\tc=>3\n')
];
